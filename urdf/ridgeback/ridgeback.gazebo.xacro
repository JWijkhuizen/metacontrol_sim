<?xml version="1.0"?>
<robot name="ridgeback" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:macro name="ridgeback_gazebo">
    <!-- Vacuum Gripper -->
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
      </plugin>
    </gazebo>

    <gazebo>
      <plugin name="ridgeback_ros_force_based_move" filename="libridgeback_ros_force_based_move.so">
        <robotNamespace>/</robotNamespace>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>25.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <cmdVelTimeOut>0.25</cmdVelTimeOut>
        <!-- Don't publish a transform: the controller does it. -->
        <publishOdometryTf>0</publishOdometryTf>
        <yaw_velocity_p_gain>500.0</yaw_velocity_p_gain>
        <x_velocity_p_gain>10000.0</x_velocity_p_gain>
        <y_velocity_p_gain>10000.0</y_velocity_p_gain>
      </plugin>
    </gazebo>

    <gazebo>
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <robotNamespace>/</robotNamespace>
        <updateRate>50.0</updateRate>
        <bodyName>imu_link</bodyName>
        <topicName>imu/data</topicName>
        <frameId>base_link</frameId>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.00005 0.00005 0.00005</rateDrift>
        <rateGaussianNoise>0.00005 0.00005 0.00005</rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
    </gazebo>

    <gazebo>
      <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <jointName>front_rocker</jointName>
        <robotNamespace>/</robotNamespace>
        <updateRate>50.0</updateRate>
      </plugin>
    </gazebo>
        <!--
    <gazebo reference="battery_link">
      <battery name="linear_battery">
        <voltage>12.592</voltage>
      </battery>
    </gazebo>

    <plugin name="battery" filename="libbattery_discharge.so">
        <ros_node>battery_monitor_client</ros_node>
        <link_name>battery_link</link_name>
        <battery_name>linear_battery</battery_name>
        <constant_coef>12.694</constant_coef>
        <linear_coef>-100.1424</linear_coef>
        <initial_charge>1.1665</initial_charge>
        <capacity>1.2009</capacity>
        <resistance>0.061523</resistance>
        <smooth_current_tau>1.9499</smooth_current_tau>
        <charge_rate>0.2</charge_rate>
    </plugin>


    <plugin name="consumer" filename="libbattery_consumer.so">
        <link_name>battery_link</link_name>
        <battery_name>linear_battery</battery_name>
        <power_load>6.6</power_load>
    </plugin>

<gazebo>
    <plugin name="battery" filename="libLinearBatteryPlugin.so">
      <link_name>battery_link</link_name>
      <battery_name>linear_battery</battery_name>
      <open_circuit_voltage_constant_coef>25</open_circuit_voltage_constant_coef>
      <open_circuit_voltage_linear_coef>-3.1424</open_circuit_voltage_linear_coef>
      <initial_charge>1.1665</initial_charge>
      <capacity>1.2009</capacity>
      <resistance>0.061523</resistance>
      <smooth_current_tau>1.9499</smooth_current_tau>
      <update_rate>0.1</update_rate>
    </plugin>
</gazebo>


<gazebo>
  <plugin name="battery_link_battery_consumer" filename="libcustom_battery_consumer_ros_plugin.so">
    <link_name>battery_link</link_name>
    <battery_name>linear_battery</battery_name>
    <power_load>6.6</power_load>
    <topic_device_state>battery_topic</topic_device_state>
  </plugin>
</gazebo>
    <gazebo>
        <plugin name="motherboard" filename="libLinearBatteryConsumerPlugin.so">
          <link_name>base_link</link_name>
          <battery_name>linear_battery</battery_name>
          <power_load>6.6</power_load>
        </plugin>
    </gazebo>
-->
    <!-- All static links get collapsed down to base_link in Gazebo, so that's
         the one to apply the colour to (in Gazebo 5+). -->
    <gazebo reference="base_link">
      <material>Gazebo/DarkGrey</material>
      <gravity>true</gravity>
    </gazebo>

    <!-- Individual link colouring still needed in Gazebo 2.x -->
    <gazebo reference="chassis_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="top_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="left_side_cover_link"><material>Gazebo/Yellow</material></gazebo>
    <gazebo reference="right_side_cover_link"><material>Gazebo/Yellow</material></gazebo>
    <gazebo reference="front_cover_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="rear_cover_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="front_lights_link"><material>Gazebo/White</material></gazebo>
    <gazebo reference="rear_lights_link"><material>Gazebo/Red</material></gazebo>
    <gazebo reference="front_rocker_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="rear_rocker_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="axle_link"><material>Gazebo/DarkGrey</material></gazebo>
    <!-- Wheel friction to zero, as movement is handled by applying forces at
         the body level. -->
    <gazebo reference="front_left_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>

    <gazebo reference="front_right_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>

    <gazebo reference="rear_left_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>

    <gazebo reference="rear_right_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>
  </xacro:macro>
</robot>
